%% VCS
@article{Estublier:2002,
 author = {Estublier, Jacky and Leblang, David and Clemm, Geoff and Conradi, Reidar and Tichy, Walter and van der Hoek, Andr{\'e} and Wiborg-Weber, Darcy},
 title = {Impact of the Research Community on the Field of Software Configuration Management: Summary of an Impact Project Report},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {September 2002},
 volume = {27},
 number = {5},
 month = sep,
 year = {2002},
 issn = {0163-5948},
 pages = {31--39},
 numpages = {9},
 URL = {http://doi.acm.org/10.1145/571681.571689},
 doi = {10.1145/571681.571689},
 acmid = {571689},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {industrial impact, software configuration management, software engineering, software quality},
} 

@article{Rochkind77,
title = "The Source Code Control System",
journal = "IEEE Transactions on Software Engineering",
volume = "1",
number = "4",
pages = "362 - 370",
year = "1975",
doi = "https://doi.org/10.1109/TSE.1975.6312866",
URL = "https://ieeexplore.ieee.org/document/6312866/",
author = "Mark J. Rochkind",
}

@article{valadares2016,
author = {Valadares, Arthur and Gabrielova, Eugenia and Lopes, Cristina Videira},
title = {On designing and testing distributed virtual environments},
journal = {Concurrency and Computation: Practice and Experience},
volume = {28},
number = {12},
pages = {3291-3312},
keywords = {performance, testing, distributed systems, distributed virtual environments, distributed simulations},
doi = {10.1002/cpe.3803},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.3803},
year = {2016}
}


@TechReport{Hunt76,
title = "An Algorithm for Differential File Comparison",
author = "J. W. Hunt and M. McIlroy",
institution = "Bell Labs",
year = "1976", 
number = "41",
month = "June"
}

@InProceedings{Hunt96,
author="Hunt, James J.
and Vo, Kiem -Phong
and Tichy, Walter F.",
editor="Sommerville, Ian",
title="An Empirical Study of Delta Algorithms",
booktitle="Software Configuration Management",
year="1996",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="49--66",
abstract="Delta algorithms compress data by encoding one file in terms of another. This type of compression is useful in a number of situations: storing multiple versions of data, distributing updates, storing backups, transmitting video sequences, and others. This paper studies the performance parameters of several delta algorithms, using a benchmark of over 1300 pairs of files taken from two successive releases of GNU software. Results indicate that modern delta compression algorithms based on Ziv-Lempel techniques significantly outperform diff, a popular but older delta compressor, in terms of compression ratio. The modern compressors also correlate better with the actual difference between files; one of them is even faster than diff in both compression and decompression speed.",
isbn="978-3-540-49569-7"
}

@InProceedings{Milewski97,
author="Milewski, Bartosz",
editor="Conradi, Reidar",
title="Distributed Source Control System",
booktitle="Software Configuration Management",
year="1997",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="98--107",
abstract="The most important point of this paper is the proof that a distributed source control does indeed work. Such a proof was needed before we could start implementing the system. As of this writing the program is not yet completed, although it has enough functionality to allow a two-person team to collaborate on a project. We've found that exchanging synchronization scripts via e-mail within such a small team is not only convenient but also encourages the exchange of comments and notes about each change.",
isbn="978-3-540-69063-4"
}

%% OT
@inproceedings{Ellis:1989,
 author = {Ellis, C. A. and Gibbs, S. J.},
 title = {Concurrency Control in Groupware Systems},
 booktitle = {Proceedings of the 1989 ACM SIGMOD International Conference on Management of Data},
 series = {SIGMOD '89},
 year = {1989},
 isbn = {0-89791-317-5},
 location = {Portland, Oregon, USA},
 pages = {399--407},
 numpages = {9},
 URL = {http://doi.acm.org/10.1145/67544.66963},
 doi = {10.1145/67544.66963},
 acmid = {66963},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Nichols:1995,
 author = {Nichols, David A. and Curtis, Pavel and Dixon, Michael and Lamping, John},
 title = {High-latency, Low-bandwidth Windowing in the Jupiter Collaboration System},
 booktitle = {Proceedings of the 8th Annual ACM Symposium on User Interface and Software Technology},
 series = {UIST '95},
 year = {1995},
 isbn = {0-89791-709-X},
 location = {Pittsburgh, Pennsylvania, USA},
 pages = {111--120},
 numpages = {10},
 URL = {http://doi.acm.org/10.1145/215585.215706},
 doi = {10.1145/215585.215706},
 acmid = {215706},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CSCW, UIMS, groupware toolkits, optimistic currency control, window toolkits},
} 

@article{Carlsson:1993,
author = {Carlsson, C},
doi = {10.1109/VRAIS.1993.380753},
isbn = {0-7803-1363-1},
journal = {Virtual Reality Annual International},
pages = {394--400},
publisher = {Ieee},
title = {{DIVE A multi-user virtual reality system}},
URL = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=380753 http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=380753},
year = {1993}
}

@inproceedings{Ressel:1996,
 author = {Ressel, Matthias and Nitsche-Ruhland, Doris and Gunzenh\"{a}user, Rul},
 title = {An Integrating, Transformation-oriented Approach to Concurrency Control and Undo in Group Editors},
 booktitle = {Proceedings of the 1996 ACM Conference on Computer Supported Cooperative Work},
 series = {CSCW '96},
 year = {1996},
 isbn = {0-89791-765-0},
 location = {Boston, Massachusetts, USA},
 pages = {288--297},
 numpages = {10},
 URL = {http://doi.acm.org/10.1145/240080.240305},
 doi = {10.1145/240080.240305},
 acmid = {240305},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrency control, group editors, group undo, groupware, interaction model, operation transformation},
} 

@inproceedings{Randolph12,
 author = {Aurel Randolph and Hanifa Boucheneb and Abdessamad Imine and Quintero Alejandro},
 title = {On Consistency of Operational Transformation Approach},
 booktitle = {Proceedings of the 14th International Workshop on Verification of Infinite-State Systems},
 year = {2012},
 location = {Paris, France},
 pages = {1--15},
 numpages = {16},
} 

@inproceedings{Oster06,
 author = {G\'erald Oster and  Pascal Molli and Pascal Urso and Abdessamad Imine},
 title = {Tombstone Transformation Functions for Ensuring Consistency in Collaborative Editing Systems},
 booktitle = {Proceedings of the International Workshop on Collaborative Computing: Networking, Applications and Worksharing (CollaborateCom)},
 year = {2006},
 doi = "https://doi.org/10.1109/COLCOM.2006.361867",
 numpages = {9},
} 

%% CRDTs
@inproceedings{Preguica:2009,
 author = {Pregui{\c{c}}a, Nuno and Marques, Joan Manuel and Shapiro, Marc and Letia, Mihai},
 title = {A Commutative Replicated Data Type for Cooperative Editing},
 booktitle = {Proceedings of the 2009 29th IEEE International Conference on Distributed Computing Systems},
 series = {ICDCS '09},
 year = {2009},
 isbn = {978-0-7695-3659-0},
 pages = {395--403},
 numpages = {9},
 URL = {http://dx.doi.org/10.1109/ICDCS.2009.20},
 doi = {10.1109/ICDCS.2009.20},
 acmid = {1584604},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {commutative replicated data type, distributed algorithms, replicated data, co-operative editing, dense identifier space},
} 

@InProceedings{shapiro11,
author="Shapiro, Marc
and Pregui{\c{c}}a, Nuno
and Baquero, Carlos
and Zawirski, Marek",
editor="D{\'e}fago, Xavier
and Petit, Franck
and Villain, Vincent",
title="Conflict-Free Replicated Data Types",
booktitle="Stabilization, Safety, and Security of Distributed Systems",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="386--400",
isbn="978-3-642-24550-3"
}

@article{ALMEIDA2018,
title = "Delta State Replicated Data Types",
journal = "Journal of Parallel and Distributed Computing",
volume = "111",
pages = "162 - 173",
year = "2018",
issn = "0743-7315",
doi = "https://doi.org/10.1016/j.jpdc.2017.08.003",
URL = "http://www.sciencedirect.com/science/article/pii/S0743731517302332",
author = "Paulo S\'ergio Almeida and Ali Shoker and Carlos Baquero",
keywords = "Distributed systems, Eventual consistency, State-based, Delta, Conflict-free replicated data types, CRDT"
}

@misc{redis,
author = "Cihan Biyikoglu",
title = "Under the Hood: Redis CRDTs (Conflict-free Replicated Data Types)",
URL = "http://lp.redislabs.com/rs/915-NFD-128/images/WP-RedisLabs-Redis-Conflict-free-Replicated-Data-Types.pdf",
institution = "Redis Labs",
note = "Retrieved Apr-2018",
}

@misc{riak,
author = "Basho",
year = "2014",
title = "Distributed Data Types - Riak 2.0",
URL = "http://basho.com/posts/technical/distributed-data-types-riak-2-0/",
institution = "Basho",
note = "Retrieved Apr-2018",
}

@inproceedings{Wuu:1984,
 author = {Wuu, Gene T.J. and Bernstein, Arthur J.},
 title = {Efficient Solutions to the Replicated Log and Dictionary Problems},
 booktitle = {Proceedings of the Third Annual ACM Symposium on Principles of Distributed Computing},
 series = {PODC '84},
 year = {1984},
 isbn = {0-89791-143-1},
 location = {Vancouver, British Columbia, Canada},
 pages = {233--242},
 numpages = {10},
 URL = {http://doi.acm.org/10.1145/800222.806750},
 doi = {10.1145/800222.806750},
 acmid = {806750},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@InProceedings{semantics-of-concurrent-revisions-2,
author="Burckhardt, Sebastian
and Leijen, Daan",
editor="Barthe, Gilles",
title="Semantics of Concurrent Revisions",
booktitle="Programming Languages and Systems",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="116--135",
abstract="Enabling applications to execute various tasks in parallel is difficult if those tasks exhibit read and write conflicts. We recently developed a programming model based on concurrent revisions that addresses this challenge in a novel way: each forked task gets a conceptual copy of all the shared state, and state changes are integrated only when tasks are joined, at which time write-write conflicts are deterministically resolved.",
isbn="978-3-642-19718-5"
}


@inproceedings{eventually-consistent-transactions,
author = {Burckhardt, Sebastian and Fahndrich, Manuel and Leijen, Daan and Sagiv, Mooly},
title = {Eventually Consistent Transactions},
booktitle = {Proceedings of the 22nd European Symposium on Programming (ESOP)},
year = {2012},
month = {March},
abstract = {When distributed clients query or update shared data, eventual consistency can provide better availability than strong consistency models. However, programming and implementing such systems can be difficult unless we establish a reasonable consistency model, i.e. some minimal guarantees that programmers can understand and systems can provide effectively. 
To this end, we propose a novel consistency model based on eventually consistent transactions. Unlike serializable transactions, eventually consistent transactions are ordered by two order relations (visibility and arbitration) rather than a single order relation. To demonstrate that eventually consistent transactions can be effectively implemented, we establish a handful of simple operational rules for managing replicas, versions and updates, based on graphs called revision diagrams. We prove that these rules are sufficient to guarantee correct implementation of eventually consistent transactions. Finally, we present two operational models (single server and server pool) of systems that provide eventually consistent transactions.
},
publisher = {Springer},
URL = {https://www.microsoft.com/en-us/research/publication/eventually-consistent-transactions/},
address = {},
pages = {},
journal = {},
volume = {},
chapter = {},
isbn = {},
}

@inproceedings{cloud-types-for-eventual-consistency,
author = {Leijen, Daan and Burckhardt, Sebastian and Wood, Benjamin P. and Fahndrich, Manuel},
title = {Cloud Types for Eventual Consistency},
booktitle = {Proceedings of the 26th European Conference on Object-Oriented Programming (ECOOP)},
year = {2012},
month = {June},
abstract = {

Mobile devices commonly access shared data stored on a server. To ensure responsiveness, many applications maintain local replicas of the shared data that remain instantly accessible even if the server is slow or temporarily unavailable. Despite its apparent simplicity and commonality, this scenario can be surprisingly challenging. In particular, a correct and reliable implementation of the communication protocol and the conflict resolution to achieve eventual consistency is daunting even for experts.

To make eventual consistency more programmable, we propose the use of specialized cloud data types. These cloud types provide eventually consistent storage at the programming language level, and thus abstract the numerous implementation details (servers, networks, caches, protocols). We demonstrate (1) how cloud types enable simple programs to use eventually consistent storage without introducing undue complexity, and (2) how to provide cloud types using a system and protocol comprised of multiple servers and clients.


},
publisher = {Springer},
URL = {https://www.microsoft.com/en-us/research/publication/cloud-types-for-eventual-consistency/},
address = {},
pages = {},
journal = {},
volume = {},
chapter = {},
isbn = {},
}

@InProceedings{gsp1,
  author =	{Alexey Gotsman and Sebastian Burckhardt},
  title =	{{Consistency Models with Global Operation Sequencing and their Composition}},
  booktitle =	{31st International Symposium on Distributed Computing (DISC 2017)},
  pages =	{23:1--23:16},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-053-8},
  ISSN =	{1868-8969},
  year =	{2017},
  volume =	{91},
  editor =	{Andr{\'e}a W. Richa},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2017/7974},
  URN =		{urn:nbn:de:0030-drops-79748},
  doi =		{10.4230/LIPIcs.DISC.2017.23},
  annote =	{Keywords: Consistency conditions, Weak memory models, Compositionality}
}

@InProceedings{gsp,
  author =	{Sebastian Burckhardt and Daan Leijen and Jonathan Protzenko and Manuel F{\"a}hndrich},
  title =	{{Global Sequence Protocol: A Robust Abstraction for Replicated Shared State}},
  booktitle =	{29th European Conference on Object-Oriented Programming (ECOOP 2015)},
  pages =	{568--590},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-939897-86-6},
  ISSN =	{1868-8969},
  year =	{2015},
  volume =	{37},
  editor =	{John Tang Boyland},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2015/5238},
  URN =		{urn:nbn:de:0030-drops-52385},
  doi =		{10.4230/LIPIcs.ECOOP.2015.568},
  annote =	{Keywords: distributed computing, eventual consistency, GSP protocol}
}

@ARTICLE{versionvector1,
author={D. S. Parker and G. J. Popek and G. Rudisin and A. Stoughton and B. J. Walker and E. Walton and J. M. Chow and D. Edwards and S. Kiser and C. Kline},
journal={IEEE Transactions on Software Engineering},
title={Detection of Mutual Inconsistency in Distributed Systems},
year={1983},
volume={SE-9},
number={3},
pages={240-247},
keywords={Availability;distributed systems;mutual consistency;network failures;network partitioning;replicated data;Network operating systems;Computer science;Computer crashes;Communication networks;Context;Telecommunication network reliability;Condition monitoring;Maintenance;Performance evaluation;Testing;Availability;distributed systems;mutual consistency;network failures;network partitioning;replicated data},
doi={10.1109/TSE.1983.236733},
ISSN={0098-5589},
month={May},}

@inproceedings{hashhistories,
  title={The hash history approach for reconciling mutual inconsistency},
  author={Kang, Brent ByungHoon and Wilensky, Robert and Kubiatowicz, John},
  booktitle={Distributed Computing Systems, 2003. Proceedings. 23rd International Conference on},
  pages={670--677},
  year={2003},
  organization={IEEE}
}

@inproceedings{bayou,
 author = {Petersen, Karin and Spreitzer, Mike and Terry, Douglas and Theimer, Marvin},
 title = {Bayou: Replicated Database Services for World-wide Applications},
 booktitle = {Proceedings of the 7th Workshop on ACM SIGOPS European Workshop: Systems Support for Worldwide Applications},
 series = {EW 7},
 year = {1996},
 location = {Connemara, Ireland},
 pages = {275--280},
 numpages = {6},
 URL = {http://doi.acm.org/10.1145/504450.504497},
 doi = {10.1145/504450.504497},
 acmid = {504497},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{CAP,
 author = {Gilbert, Seth and Lynch, Nancy},
 title = {Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-tolerant Web Services},
 journal = {SIGACT News},
 issue_date = {June 2002},
 volume = {33},
 number = {2},
 month = jun,
 year = {2002},
 issn = {0163-5700},
 pages = {51--59},
 numpages = {9},
 URL = {http://doi.acm.org/10.1145/564585.564601},
 doi = {10.1145/564585.564601},
 acmid = {564601},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{cassandra2014apache,
  title={Apache cassandra},
  author={Cassandra, Apache},
  journal={Website. Available online at http://planetcassandra.org/what-is-apache-cassandra},
  pages={13},
  year={2014},
}

@article{Lamport1979,
  title={How to make a multiprocessor computer that correctly executes multiprocess progranm},
  author={Lamport, Leslie},
  journal={IEEE transactions on computers},
  number={9},
  pages={690--691},
  year={1979},
  publisher={IEEE}
}


@Article{Ahamad1995,
author="Ahamad, Mustaque
and Neiger, Gil
and Burns, James E.
and Kohli, Prince
and Hutto, Phillip W.",
title="Causal memory: definitions, implementation, and programming",
journal="Distributed Computing",
year="1995",
month="Mar",
day="01",
volume="9",
number="1",
pages="37--49",
abstract="The abstraction of a shared memory is of growing importance in distributed computing systems. Traditional memory consistency ensures that all processes agree on a common order of all operations on memory. Unfortunately, providing these guarantees entails access latencies that prevent scaling to large systems. This paper weakens such guarantees by definingcausal memory, an abstraction that ensures that processes in a system agree on the relative ordering of operations that arecausally related. Because causal memory isweakly consistent, it admits more executions, and hence more concurrency, than either atomic or sequentially consistent memories. This paper provides a formal definition of causal memory and gives an implementation for message-passing systems. In addition, it describes a practical class of programs that, if developed for a strongly consistent memory, run correctly with causal memory.",
issn="1432-0452",
doi="10.1007/BF01784241",
URL="https://doi.org/10.1007/BF01784241"
}

@book{Tanenbaum2006,
 author = {Tanenbaum, Andrew S. and Steen, Maarten van},
 title = {Distributed Systems: Principles and Paradigms (2Nd Edition)},
 year = {2006},
 isbn = {0132392275},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
} 

@article{kegelc10k,
  title={The C10K problem. 2011},
  author={Kegel, Dan},
  journal={URL http://www. kegel. com/c10k. html}
}

@inproceedings {Guerraoui:2016,
author = {Rachid Guerraoui and Matej Pavlovic and Dragos-Adrian Seredinschi},
title = {Incremental Consistency Guarantees for Replicated Objects},
booktitle = {12th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 16)},
year = {2016},
isbn = {978-1-931971-33-1},
address = {Savannah, GA},
pages = {169--184},
URL = {https://www.usenix.org/conference/osdi16/technical-sessions/presentation/guerraoui},
publisher = {{USENIX} Association},
}

@article{alvisi2017writes,
  title={Writes: the dirty secret of causal consistency.},
  author={Alvisi, Lorenzo and Crooks, Natacha and Mehdi, Syed Akbar},
  journal={IEEE Data Eng. Bull.},
  volume={40},
  number={4},
  pages={15--25},
  year={2017}
}

@inproceedings{tardis,
 author = {Crooks, Natacha and Pu, Youer and Estrada, Nancy and Gupta, Trinabh and Alvisi, Lorenzo and Clement, Allen},
 title = {TARDiS: A Branch-and-Merge Approach To Weak Consistency},
 booktitle = {Proceedings of the 2016 International Conference on Management of Data},
 series = {SIGMOD '16},
 year = {2016},
 isbn = {978-1-4503-3531-7},
 location = {San Francisco, California, USA},
 pages = {1615--1628},
 numpages = {14},
 URL = {http://doi.acm.org/10.1145/2882903.2882951},
 doi = {10.1145/2882903.2882951},
 acmid = {2882951},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {causal consistency, databases, distributed systems, eventual consistency, geo-distribution, merging, replication, transactions, weak consistency},
} 

@article{Vogels:2009,
 author = {Vogels, Werner},
 title = {Eventually Consistent},
 journal = {Commun. ACM},
 issue_date = {January 2009},
 volume = {52},
 number = {1},
 month = jan,
 year = {2009},
 issn = {0001-0782},
 pages = {40--44},
 numpages = {5},
 URL = {http://doi.acm.org/10.1145/1435417.1435432},
 doi = {10.1145/1435417.1435432},
 acmid = {1435432},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@ARTICLE{lamport:1979, 
author={Leslie Lamport}, 
journal={IEEE Transactions on Computers}, 
title={How to Make a Multiprocessor Computer That Correctly Executes Multiprocess Programs}, 
year={1979}, 
volume={C-28}, 
number={9}, 
pages={690-691}, 
keywords={Computer design;concurrent computing;hardware correctness;multiprocessing;parallel processing;Computer design;concurrent computing;hardware correctness;multiprocessing;parallel processing}, 
doi={10.1109/TC.1979.1675439}, 
ISSN={0018-9340}, 
month={Sep.},}

@inproceedings{terry1994session,
  title={Session guarantees for weakly consistent replicated data},
  author={Terry, Douglas B and Demers, Alan J and Petersen, Karin and Spreitzer, Mike J and Theimer, Marvin M and Welch, Brent B},
  booktitle={Proceedings of 3rd International Conference on Parallel and Distributed Information Systems},
  pages={140--149},
  year={1994},
  organization={IEEE}
}

@book{tso,
  title={The SPARC architecture manual},
  author={SPARC International Inc and Weaver, David L},
  year={1994},
  publisher={Prentice-Hall}
}

@inproceedings{mergeable_types,
  TITLE = {{Mergeable persistent data structures}},
  AUTHOR = {Farinier, Benjamin and Gazagnaire, Thomas and Madhavapeddy, Anil},
  URL = {https://hal.inria.fr/hal-01099136},
  BOOKTITLE = {{Vingt-sixi{\`e}mes Journ{\'e}es Francophones des Langages Applicatifs (JFLA 2015)}},
  ADDRESS = {Le Val d'Ajol, France},
  EDITOR = {David Baelde and Jade Alglave},
  YEAR = {2015},
  MONTH = Jan,
  PDF = {https://hal.inria.fr/hal-01099136/file/paper.pdf},
  HAL_ID = {hal-01099136},
  HAL_VERSION = {v2},
}

@article{schiffenbauer1981interactive,
  title={INTERACTIVE DEBUGGING IN A DISTRIBUTED COMPUTATIONAL},
  author={Schiffenbauer, Robert David},
  year={1981},
  publisher={Massachusetts Institute of Technology}
}


@phdthesis{recordreplay,
  title={Replay debugging for distributed applications},
  author={Geels, Dennis Michael and Altekar, Gautam and Shenker, Scott and Stoica, Ion},
  year={2006},
  school={University of California, Berkeley}
}

@article{shiviz,
 author = {Beschastnikh, Ivan and Wang, Patty and Brun, Yuriy and Ernst, Michael D.},
 title = {Debugging Distributed Systems},
 journal = {Commun. ACM},
 issue_date = {August 2016},
 volume = {59},
 number = {8},
 month = jul,
 year = {2016},
 issn = {0001-0782},
 pages = {32--37},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/2909480},
 doi = {10.1145/2909480},
 acmid = {2909480},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{tracing,
 author = {Mace, Jonathan and Roelke, Ryan and Fonseca, Rodrigo},
 title = {Pivot Tracing: Dynamic Causal Monitoring for Distributed Systems},
 journal = {ACM Trans. Comput. Syst.},
 issue_date = {December 2018},
 volume = {35},
 number = {4},
 month = dec,
 year = {2018},
 issn = {0734-2071},
 pages = {11:1--11:28},
 articleno = {11},
 numpages = {28},
 url = {http://doi.acm.org/10.1145/3208104},
 doi = {10.1145/3208104},
 acmid = {3208104},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Distributed systems monitoring, end-to-end tracing},
} 

@article{d3s,
  title={D3S: Debugging deployed distributed systems},
  author={Liu, Xuezheng and Guo, Zhenyu and Wang, Xi and Chen, Feibo and Lian, Xiaochen and Tang, Jian and Wu, Ming and Kaashoek, M Frans and Zhang, Zheng},
  year={2008}
}

@inproceedings{friday,
  title={Friday: Global Comprehension for Distributed Replay.},
  author={Geels, Dennis and Altekar, Gautam and Maniatis, Petros and Roscoe, Timothy and Stoica, Ion},
  booktitle={NSDI},
  volume={7},
  pages={285--298},
  year={2007}
}


@article{oddity,
  author    = {Doug Woos and
               Zachary Tatlock and
               Michael D. Ernst and
               Thomas E. Anderson},
  title     = {A Graphical Interactive Debugger for Distributed Systems},
  journal   = {CoRR},
  volume    = {abs/1806.05300},
  year      = {2018},
  url       = {http://arxiv.org/abs/1806.05300},
  archivePrefix = {arXiv},
  eprint    = {1806.05300},
  timestamp = {Mon, 13 Aug 2018 16:47:38 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1806-05300},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{tracing2,
author="Falcone, Yli{\`e}s
and Nazarpour, Hosein
and Jaber, Mohamad
and Bozga, Marius
and Bensalem, Saddek",
editor="Colombo, Christian
and Leucker, Martin",
title="Tracing Distributed Component-Based Systems, a Brief Overview",
booktitle="Runtime Verification",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="417--425",
abstract="We overview a framework for tracing asynchronous distributed component-based systems with multiparty interactions managed by distributed schedulers. Neither the global state nor the total ordering of the system events is available at runtime. We instrument the system to retrieve local events from the local traces of the schedulers. Local events are sent to a global observer which reconstructs on-the-fly the global traces that are compatible with the local traces, in a concurrency-preserving and communication-delay insensitive fashion. The global traces are represented as an original lattice over partial states, such that any path of the lattice projected on a scheduler represents the corresponding local partial trace according to that scheduler (soundness), and all possible global traces of the system are recorded (completeness).",
isbn="978-3-030-03769-7"
}

@inproceedings{dagviz,
 author = {Huynh, An and Thain, Douglas and Peric\`{a}s, Miquel and Taura, Kenjiro},
 title = {DAGViz: A DAG Visualization Tool for Analyzing Task-parallel Program Traces},
 booktitle = {Proceedings of the 2Nd Workshop on Visual Performance Analysis},
 series = {VPA '15},
 year = {2015},
 isbn = {978-1-4503-4013-7},
 location = {Austin, Texas},
 pages = {3:1--3:8},
 articleno = {3},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/2835238.2835241},
 doi = {10.1145/2835238.2835241},
 acmid = {2835241},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DAG visualization, performance analysis, profiler, task parallel, tracer},
} 

@article{ravel,
  title={Combing the communication hairball: Visualizing parallel execution traces using logical time},
  author={Isaacs, Katherine E and Bremer, Peer-Timo and Jusufi, Ilir and Gamblin, Todd and Bhatele, Abhinav and Schulz, Martin and Hamann, Bernd},
  journal={IEEE transactions on visualization and computer graphics},
  volume={20},
  number={12},
  pages={2349--2358},
  year={2014},
  publisher={IEEE}
}


@article{overview_tool,
  title={Overview: A framework for generic online visualization of distributed systems},
  author={Desell, Travis and Iyer, Harihar Narasimha and Varela, Carlos and Stephens, Abe},
  journal={Electronic Notes in Theoretical Computer Science},
  volume={107},
  pages={87--101},
  year={2004},
  publisher={Elsevier}
}

@inproceedings{loganalysis,
  title={Execution anomaly detection in distributed systems through unstructured log analysis},
  author={Fu, Qiang and Lou, Jian-Guang and Wang, Yi and Li, Jiang},
  booktitle={2009 ninth IEEE international conference on data mining},
  pages={149--158},
  year={2009},
  organization={IEEE}
}


@Inbook{testing2,
author="Ulrich, Andreas
and K{\"o}nig, Hartmut",
editor="Csopaki, Gyula
and Dibuz, Sarolta
and Tarnay, Katalin",
title="Architectures for Testing Distributed Systems",
bookTitle="Testing of Communicating Systems: Methods and Applications",
year="1999",
publisher="Springer US",
address="Boston, MA",
pages="93--108",
abstract="Stabilizing network infrastructures has moved the focus of software system engineering to the development of distributed applications running on top of the network. The complexity of distributed systems and their inherent concurrency pose high requirements on their design and implementation. This is also true for the validation of the systems, in particular the test. Compared to protocol testing the test of distributed systems and applications requires different methods for deriving test cases and for running the test. In this paper, we discuss architectures for testing distributed, concurrent systems. We suggest three different models: a global tester that has total control over the distributed system under test (SUT) and, more interestingly, two types of distributed testers comprising several concurrent tester components. The test architectures rely on a grey-box testing approach that allows to observe internal interactions of the SUT by the tester. In order to assure a correct assessment of the test data collected by the distributed tester components, the tester has to maintain a correct global view on the SUT. This can be achieved either by the use of redundant points of control and observation or by test coordination procedures. We outline the features of each approach and discuss their benefits and shortages. Finally, we describe possible simplifications for the architectures.",
isbn="978-0-387-35567-2",
doi="10.1007/978-0-387-35567-2_7",
url="https://doi.org/10.1007/978-0-387-35567-2_7"
}

@Article{testing1,
author="Sch{\"u}tz, Werner",
title="Fundamental issues in testing distributed real-time systems",
journal="Real-Time Systems",
year="1994",
month="Sep",
day="01",
volume="7",
number="2",
pages="129--157",
abstract="This paper examines the fundamental problems that one faces when testing a distributed, hard real-time system. It specifically identifies the influences of the distributedness and of the real-time requirements of the systems considered. We show how the usual problems of testing become more difficult, and which additional problems are introduced, because of these additional system characteristics.",
issn="1573-1383",
doi="10.1007/BF01088802",
url="https://doi.org/10.1007/BF01088802"
}

@article{modelchecking1,
  title={MODIST: Transparent model checking of unmodified distributed systems},
  author={Yang, Junfeng and Chen, Tisheng and Wu, Ming and Xu, Zhilei and Liu, Xuezheng and Lin, Haoxiang and Yang, Mao and Long, Fan and Zhang, Lintao and Zhou, Lidong},
  year={2009}
}

@inproceedings{verdi,
 author = {Wilcox, James R. and Woos, Doug and Panchekha, Pavel and Tatlock, Zachary and Wang, Xi and Ernst, Michael D. and Anderson, Thomas},
 title = {Verdi: A Framework for Implementing and Formally Verifying Distributed Systems},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {357--368},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2737924.2737958},
 doi = {10.1145/2737924.2737958},
 acmid = {2737958},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coq, Formal verification, Verdi, distributed systems, proof assistants},
} 


@ARTICLE{got,
       author = {{Achar}, Rohan and {Lopes}, Cristina V.},
        title = "{Got: Git, but for Objects}",
      journal = {arXiv e-prints},
     keywords = {Computer Science - Programming Languages, Computer Science - Distributed, Parallel, and Cluster Computing},
         year = "2019",
        month = "Apr",
          eid = {arXiv:1904.06584},
        pages = {arXiv:1904.06584},
archivePrefix = {arXiv},
       eprint = {1904.06584},
 primaryClass = {cs.PL},
       adsurl = {https://ui.adsabs.harvard.edu/abs/2019arXiv190406584A},
      adsnote = {Provided by the SAO/NASA Astrophysics Data System}
}

@article{readstability,
 author = {Larson, Per-{\AA}ke and Blanas, Spyros and Diaconu, Cristian and Freedman, Craig and Patel, Jignesh M. and Zwilling, Mike},
 title = {High-performance Concurrency Control Mechanisms for Main-memory Databases},
 journal = {Proc. VLDB Endow.},
 issue_date = {December 2011},
 volume = {5},
 number = {4},
 month = dec,
 year = {2011},
 issn = {2150-8097},
 pages = {298--309},
 numpages = {12},
 url = {http://dx.doi.org/10.14778/2095686.2095689},
 doi = {10.14778/2095686.2095689},
 acmid = {2095689},
 publisher = {VLDB Endowment},
} 
